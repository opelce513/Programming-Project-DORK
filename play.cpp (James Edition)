#include "dork.h" 
#include "game.h" 
#include <string> 
#include <stdio.h> 
#include <ctime> 
#include <cstdlib> 

using namespace std; 

void checkpoint(int num, int roll,character& a);

void roll(char user_input,character& a){ 
	if (user_input == 'r'){ 
		int roll_num = ((rand() % 6) + 1); 
		int y = a.getEnergy(); // get the intial 10 energy points
		--y;// subtract 1 energy per roll
		a.setEnergy(y); //set the energy again after subtraction
		a.getEnergy(); //get the energy after the subtraction
		int num=a.getSteps();//get number of steps 
		a.setSteps(num+roll_num);
		checkpoint(num,roll_num,a);
		clearDisplay(1); //clear the display after pressing any button
		a.printCharacter(); //print character with update energy and steps 
		printw("your number of steps is : %i \n", roll_num); 
		printw("Press r to roll the dice, press q to quit: " );
	char x = getch();
	printw("\n");
	roll(x,a); 
	} 
	else if (user_input == 'q'){ 
		printw("you stop the program!congrats start all over\n");
		} 
	else{ 
		printw("You did not press r or q, try again\n"); 
		}
}

void database(){
ifstream myfile;
	myfile.open ("events.txt");
	if (!myfile){
	printw("Could not open file \n");
	}
	else {
	string event[22702];
	int response[22702];
	int energy[22702];
	int question[22702];
	int locationx[22702];
	int locationy[22702];
   	
		for (string line;getline(myfile,line);) {
	int x=0;
	int y=0;
	int key=0;
	int count=0;
	string findCarrot = line; 
	int length = strlen(findCarrot.c_str()); 
	char carrot = '^'; 
	char comma = ',';
	int pos[6] = {0,0,0,0,0,0}; 
	string a,b,c,d,e,f,a1,a2,e1,e2;
			for (int i = 0; i < length; i++){				
				if(findCarrot[i]=='^'){ 
					pos[count]=i;
				 	//printw("%i \n", pos[count]);// for testing purposes
					count++;
				}
			}
			a=findCarrot.substr(0,pos[0]);
			b=findCarrot.substr(pos[0]+1,(pos[1]-pos[0]-1));
			c=findCarrot.substr(pos[1]+1,(pos[2]-pos[1]-1));
			d=findCarrot.substr(pos[2]+1,(pos[3]-pos[2]-1));
			e=findCarrot.substr(pos[3]+1,(pos[4]-pos[3]-1));
			f=findCarrot.substr(pos[4]+1,(pos[5]-pos[4]-1));
			int length2=strlen(a.c_str());
			int count2=0;
			for (int i=0; i < length2; i++){
				if(a[i]==comma){
					count2=i;
				}
			}
			a1=a.substr(0,count2);
			a2=a.substr(count2+1,length2-count2-1);
		
			int length3=strlen(e.c_str());
			int count3=0;
			for (int i=0; i < length3; i++){
				if(e[i]==comma){
					count3=i;
				}
			}
			e1=e.substr(0,count3);
			e2=e.substr(count3+1,length3-count3-1);
			//printw("%s \n %s % s\n", a.c_str(),a1.c_str(),a2.c_str()); //for testing purposes
			//printw("%s \n %s % s\n", e.c_str(),e1.c_str(),e2.c_str()); //for testing purposes
	//printw("%s \n %s \n %s \n %s \n %s \n %s ", a.c_str(),b.c_str(),c.c_str(),d.c_str(),e.c_str(),f.c_str());
			x=stoi(a1.c_str());
			y=stoi(a2.c_str());
			key=x*x+y;
			event[key]=b;
			response[key]=stoi(c.c_str());
			energy[key]=stoi(d.c_str());
			locationx[key]=stoi(e1.c_str());
			locationy[key]=stoi(e2.c_str());
			question[key]=stoi(f.c_str());
			clearDisplay(1);			
			printw("%i %s %i %i %i %i %i", key, event[key].c_str(), response[key], energy[key], locationx[key], locationy[key], question[key]);
		}
		myfile.close();
		}
}

